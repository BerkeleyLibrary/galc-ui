name: Build
on: [ push, pull_request, release, workflow_dispatch ]

env:
  YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  YARN_NPM_PUBLISH_REGISTRY: 'https://npm.pkg.github.com'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/node_modules
          key: cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Check style
        run: yarn lint

      - name: Build
        run: yarn build

      # TODO: tests

      - name: Upload distribution
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/**

  # TODO: stop hard-coding ref_name and package-name
  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && github.event_name == 'push'

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download distribution
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Delete latest snapshot package if present
        continue-on-error: true
        uses: actions/delete-package-versions@v3
        with:
          package-name: galc-ui
          # Delete only '0.0.0' -- see https://github.com/actions/delete-package-versions/issues/61
          ignore-versions: '^(?!0\.0\.0$).+'
          min-versions-to-keep: 0

      - name: Publish latest snapshot
        if: github.event_name == 'push'
        run: |
          yarn version 0.0.0 --immediate
          yarn npm publish

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download distribution
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish release package
        run: yarn npm publish
